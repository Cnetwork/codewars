From 1ea5a83ee80a79304cbcb2ae1dcdcd7ef18a2e2f Mon Sep 17 00:00:00 2001
From: Cnetwork <shuguang.wang1990@gmail.com>
Date: Mon, 21 Apr 2014 17:08:25 +0800
Subject: [PATCH 01/25] init commit

---
 001_wttc_8.rb |  7 +++++++
 002_sfl_7.rb  | 33 +++++++++++++++++++++++++++++++++
 003_stgc_7.rb | 15 +++++++++++++++
 004_pd_7.rb   |  7 +++++++
 005_roh_7.rb  | 39 +++++++++++++++++++++++++++++++++++++++
 index.md      | 11 +++++++++++
 6 files changed, 112 insertions(+)
 create mode 100644 001_wttc_8.rb
 create mode 100644 002_sfl_7.rb
 create mode 100644 003_stgc_7.rb
 create mode 100644 004_pd_7.rb
 create mode 100644 005_roh_7.rb
 create mode 100644 index.md

diff --git a/001_wttc_8.rb b/001_wttc_8.rb
new file mode 100644
index 0000000..0643dbc
--- /dev/null
+++ b/001_wttc_8.rb
@@ -0,0 +1,7 @@
+#welcome to the city
+=begin
+1. The "name" must be connect with " "
+=end
+
+def say_hello
+  
\ No newline at end of file
diff --git a/002_sfl_7.rb b/002_sfl_7.rb
new file mode 100644
index 0000000..0a4d2e2
--- /dev/null
+++ b/002_sfl_7.rb
@@ -0,0 +1,33 @@
+#search for letters
+def change(word)
+  # put your code here!
+  arr = Array.new(26, '0')
+  #arr = [0] * 26
+  str = word.downcase
+  str.each_byte{|byte|   #this byte can be replace by |c| or other variable
+    if ((byte<=122)&&(byte>=97))
+      arr[byte-97] = 1
+    end
+    #if can not have {} here!!
+   }
+  return arr.join
+  #doesn't need to use return it can be automatically
+  # it is shortcut of  arr.join("") because there is no separte code in "" 
+end
+
+
+def change_2(word)
+  (”a”..“z“).map {|v| word.downcase.include?(v) ? '1' : '0'}.join
+end
+
+
+def change_3(word)
+  0.upto(25).map { |v| word.index(('a'.ord + i).chr).nil? ? 0 : 1}.join
+  #'a'.ord can get its ascii value
+end
+
+def change_4(word)
+  '%026b' % (a.each_byte.reduce(0)) { |m, c| m | (1 << 122 - (c | 32))} & ~(-1 << 26)
+end
+#这种印出方式参见
+#puts "He's %d inches tall." % my_height    has 'sapce' between '%' and my_height
\ No newline at end of file
diff --git a/003_stgc_7.rb b/003_stgc_7.rb
new file mode 100644
index 0000000..5e3498f
--- /dev/null
+++ b/003_stgc_7.rb
@@ -0,0 +1,15 @@
+#sort for gift code
+def sort_gift_code code
+  #TODO
+  ('a'..'z').map {|letter| code.include?(letter) ? letter : ''}.join
+end
+
+
+def sort_gift_code code
+  code.chars.sort.join
+  #code.split('').sort.join
+end
+# string#chars return an array of characters in str
+# Array#sort can sort it then use the join to connect them
+#you can use split('') to separte them
+
diff --git a/004_pd_7.rb b/004_pd_7.rb
new file mode 100644
index 0000000..1a75e00
--- /dev/null
+++ b/004_pd_7.rb
@@ -0,0 +1,7 @@
+#padded numbers
+def solution(value)
+  "Value is %.5d" % value
+  # "Value is %05d" % [value]
+  sprintf "Value is %05d", value
+  # we should use sprintf to get the 00005
+end
\ No newline at end of file
diff --git a/005_roh_7.rb b/005_roh_7.rb
new file mode 100644
index 0000000..3f1aa70
--- /dev/null
+++ b/005_roh_7.rb
@@ -0,0 +1,39 @@
+#remove odd hashes
+def remove_odd_hashes(array, key_1, key_2)
+  array.delete_if{|x| (x[key_1] + x[key_2]).odd? }
+end
+#there is an interator delete_if!
+
+def remove_odd_hashes(array, key_1, key_2)
+  array.delete_if{|x| x.values.inject(:+).odd?}
+end
+
+def remove_odd_hashes(array, key_1, key_2)
+  array.reject {|h| (h[key_1] + h[key_2]).odd? }
+end
+
+def remove_odd_hashes(array, key_1, key_2)
+  array.select do |x|
+    (x[key_1] + x[key_2]).even?
+  end
+end
+
+# may be error
+def remove_odd_hashes(array, key_1, key_2)
+  #you can check for "%" operator
+  array.map{ |hashes| ((hashes[key_1] + hashes[key_2])%2 != 0) ? array.delete(hashes) : {} }
+  return array
+end
+#pay attention 1.9.2 cannot do an array with only one variable
+#!!!!!expect [] but it return [ {a: 3, b: 4} ]!!!
+
+
+def remove_odd_hashes_2(array, key_1, key_2)
+  array2 = []
+  array.map{ |hashes| ((hashes[key_1] + hashes[key_2]) % 2 != 0) ? array2.push(hashes) : {}}
+  array2
+end
+
+
+p remove_odd_hashes( 
+  [ {a: 3, b: 4} ],  :a, :b)
\ No newline at end of file
diff --git a/index.md b/index.md
new file mode 100644
index 0000000..2d2a51d
--- /dev/null
+++ b/index.md
@@ -0,0 +1,11 @@
+#The index of the codewars
+
+##001_wttc_8
+###Create a method say_hello that takes as input a name, city, and state to welcome a person. Note that name will be an array consisting of one or more values that should be joined together with one space betweeen each, and the length of the name array in test cases will vary.
+
+###Example
+
+###say_hello(['John', 'Smith'], 'Phoenix', 'Arizona')
+###This example will return the string Hello, John Smith! Welcome to Phoenix, Arizona!
+
+ 
\ No newline at end of file
-- 
2.5.5

